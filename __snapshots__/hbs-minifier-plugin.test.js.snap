// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) collapses whitespace into single space character 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    MustacheStatement {
      "escaped": true,
      "hash": Hash {
        "pairs": Array [],
      },
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "foo",
        "parts": Array [
          "foo",
        ],
        "this": false,
      },
    },
    TextNode {
      "chars": " ",
    },
    MustacheStatement {
      "escaped": true,
      "hash": Hash {
        "pairs": Array [],
      },
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "bar",
        "parts": Array [
          "bar",
        ],
        "this": false,
      },
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) collapses whitespace into single space character 2`] = `
"{{foo}}  

   
{{bar}}
---
{{foo}} {{bar}}"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not collapse &nbsp; surrounding a text content into a single whitespace 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": "  1  ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "span",
        },
        TextNode {
          "chars": " ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": " 2 ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "span",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not collapse &nbsp; surrounding a text content into a single whitespace 2`] = `
"<div>
  <span>    &nbsp;1&nbsp;   </span>
  <span> 2   </span>
</div>
---
<div><span> &nbsp;1&nbsp; </span> <span> 2 </span></div>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not collapse multiple &nbsp; textNode into a single whitespace 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "1",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "span",
    },
    TextNode {
      "chars": "  ",
    },
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "2",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "span",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not collapse multiple &nbsp; textNode into a single whitespace 2`] = `
"<span>1</span>&nbsp;&nbsp;<span>2</span>
---
<span>1</span>&nbsp;&nbsp;<span>2</span>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not collapse whitespace inside of <pre> tags 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "  

   
",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "pre",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not collapse whitespace inside of <pre> tags 2`] = `
"<pre>  

   
</pre>
---
<pre>  

   
</pre>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not collapse whitespace inside of {{#no-minify}} tags in other tags 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "  

   
",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not collapse whitespace inside of {{#no-minify}} tags in other tags 2`] = `
"<div>{{#no-minify}}  

   
{{/no-minify}}</div>
---
<div>  

   
</div>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not minify \`classNames\` specified in .hbs-minifyrc.js 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [
        AttrNode {
          "name": "class",
          "value": TextNode {
            "chars": "description",
          },
        },
      ],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "
  1
  ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": "
    2
  ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "span",
        },
        TextNode {
          "chars": "
",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not minify \`classNames\` specified in .hbs-minifyrc.js 2`] = `
"<div class=\\"description\\">
  1
  <span>
    2
  </span>
</div>
---
<div class=\\"description\\">
  1
  <span>
    2
  </span>
</div>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not minify \`components\` specified in .hbs-minifyrc.js 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    BlockStatement {
      "hash": Hash {
        "pairs": Array [],
      },
      "inverse": null,
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "foo-bar",
        "parts": Array [
          "foo-bar",
        ],
        "this": false,
      },
      "program": Program {
        "blockParams": Array [],
        "body": Array [
          TextNode {
            "chars": "  ",
          },
          ElementNode {
            "attributes": Array [],
            "blockParams": Array [],
            "children": Array [
              TextNode {
                "chars": "
    yield content
  ",
              },
            ],
            "comments": Array [],
            "modifiers": Array [],
            "selfClosing": false,
            "tag": "span",
          },
          TextNode {
            "chars": "
",
          },
        ],
      },
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not minify \`components\` specified in .hbs-minifyrc.js 2`] = `
"{{#foo-bar}}
  <span>
    yield content
  </span>
{{/foo-bar}}
---
{{#foo-bar}}  <span>
    yield content
  </span>
{{/foo-bar}}"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not minify \`tagNames\` specified in .hbs-minifyrc.js 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "
  Box 564,
  ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": "
    Disneyland
  ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "b",
        },
        TextNode {
          "chars": "
  ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "br",
        },
        TextNode {
          "chars": "
  ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": " USA ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "u",
        },
        TextNode {
          "chars": "
",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "address",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not minify \`tagNames\` specified in .hbs-minifyrc.js 2`] = `
"<address>
  Box 564,
  <b>
    Disneyland
  </b>
  <br>
  <u> USA </u>
</address>
---
<address>
  Box 564,
  <b>
    Disneyland
  </b>
  <br>
  <u> USA </u>
</address>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not strip inside of <pre> tags 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "        ",
        },
        MustacheStatement {
          "escaped": true,
          "hash": Hash {
            "pairs": Array [],
          },
          "params": Array [],
          "path": PathExpression {
            "data": false,
            "original": "foo",
            "parts": Array [
              "foo",
            ],
            "this": false,
          },
        },
        TextNode {
          "chars": "        ",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "pre",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not strip inside of <pre> tags 2`] = `
"<pre>        {{foo}}        </pre>
---
<pre>        {{foo}}        </pre>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not strip inside of {{#no-minify}} tags 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    TextNode {
      "chars": "        ",
    },
    MustacheStatement {
      "escaped": true,
      "hash": Hash {
        "pairs": Array [],
      },
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "foo",
        "parts": Array [
          "foo",
        ],
        "this": false,
      },
    },
    TextNode {
      "chars": "        ",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not strip inside of {{#no-minify}} tags 2`] = `
"{{#no-minify}}        {{foo}}        {{/no-minify}}
---
        {{foo}}        "
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not strip inside of {{#no-minify}} tags in other tags 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "        ",
        },
        MustacheStatement {
          "escaped": true,
          "hash": Hash {
            "pairs": Array [],
          },
          "params": Array [],
          "path": PathExpression {
            "data": false,
            "original": "foo",
            "parts": Array [
              "foo",
            ],
            "this": false,
          },
        },
        TextNode {
          "chars": "        ",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not strip inside of {{#no-minify}} tags in other tags 2`] = `
"<div>{{#no-minify}}        {{foo}}        {{/no-minify}}</div>
---
<div>        {{foo}}        </div>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not strip leading/trailing text from ElementNode nodes 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "x ",
        },
        MustacheStatement {
          "escaped": true,
          "hash": Hash {
            "pairs": Array [],
          },
          "params": Array [],
          "path": PathExpression {
            "data": false,
            "original": "foo",
            "parts": Array [
              "foo",
            ],
            "this": false,
          },
        },
        TextNode {
          "chars": " y ",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not strip leading/trailing text from ElementNode nodes 2`] = `
"<div>x        {{foo}}     y   </div>
---
<div>x {{foo}} y </div>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not strip leading/trailing text from Program nodes 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    TextNode {
      "chars": "x ",
    },
    MustacheStatement {
      "escaped": true,
      "hash": Hash {
        "pairs": Array [],
      },
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "foo",
        "parts": Array [
          "foo",
        ],
        "this": false,
      },
    },
    TextNode {
      "chars": " y ",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) does not strip leading/trailing text from Program nodes 2`] = `
"x        {{foo}}     y   
---
x {{foo}} y "
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) minifies \`classNames\` that are not specified in .hbs-minifyrc.js 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [
        AttrNode {
          "name": "class",
          "value": TextNode {
            "chars": "contact-details",
          },
        },
      ],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": " John Smith ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": " (Entrepreneur) ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "i",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) minifies \`classNames\` that are not specified in .hbs-minifyrc.js 2`] = `
"<div class=\\"contact-details\\">
  John Smith
  <i>
    (Entrepreneur)
  </i>
</div>
---
<div class=\\"contact-details\\"> John Smith <i> (Entrepreneur) </i></div>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) minifies \`components\` that are not specified in .hbs-minifyrc.js 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    BlockStatement {
      "hash": Hash {
        "pairs": Array [],
      },
      "inverse": null,
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "my-component",
        "parts": Array [
          "my-component",
        ],
        "this": false,
      },
      "program": Program {
        "blockParams": Array [],
        "body": Array [
          ElementNode {
            "attributes": Array [],
            "blockParams": Array [],
            "children": Array [
              TextNode {
                "chars": " yield content ",
              },
            ],
            "comments": Array [],
            "modifiers": Array [],
            "selfClosing": false,
            "tag": "span",
          },
        ],
      },
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) minifies \`components\` that are not specified in .hbs-minifyrc.js 2`] = `
"{{#my-component}}
  <span>
    yield content
  </span>
{{/my-component}}
---
{{#my-component}}<span> yield content </span>{{/my-component}}"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) minifies \`tagNames\` that are not specified in .hbs-minifyrc.js 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": " Box 564, ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": " Disneyland ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "b",
        },
        TextNode {
          "chars": " ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "br",
        },
        TextNode {
          "chars": " ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": " USA ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "u",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "section",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) minifies \`tagNames\` that are not specified in .hbs-minifyrc.js 2`] = `
"<section>
  Box 564,
  <b>
    Disneyland
  </b>
  <br>
  <u> USA </u>
</section>
---
<section> Box 564, <b> Disneyland </b> <br> <u> USA </u></section>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) strips leading and trailing whitespace from ElementNode nodes 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        MustacheStatement {
          "escaped": true,
          "hash": Hash {
            "pairs": Array [],
          },
          "params": Array [],
          "path": PathExpression {
            "data": false,
            "original": "foo",
            "parts": Array [
              "foo",
            ],
            "this": false,
          },
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) strips leading and trailing whitespace from ElementNode nodes 2`] = `
"<div>        {{foo}}        </div>
---
<div>{{foo}}</div>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) strips leading and trailing whitespace from Program nodes 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    MustacheStatement {
      "escaped": true,
      "hash": Hash {
        "pairs": Array [],
      },
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "foo",
        "parts": Array [
          "foo",
        ],
        "this": false,
      },
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.35.11) strips leading and trailing whitespace from Program nodes 2`] = `
"        {{foo}}        
---
{{foo}}"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) collapses whitespace into single space character 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    MustacheStatement {
      "escaped": true,
      "hash": Hash {
        "pairs": Array [],
      },
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "foo",
        "parts": Array [
          "foo",
        ],
        "this": false,
      },
    },
    TextNode {
      "chars": " ",
    },
    MustacheStatement {
      "escaped": true,
      "hash": Hash {
        "pairs": Array [],
      },
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "bar",
        "parts": Array [
          "bar",
        ],
        "this": false,
      },
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) collapses whitespace into single space character 2`] = `
"{{foo}}  

   
{{bar}}
---
{{foo}} {{bar}}"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not collapse &nbsp; surrounding a text content into a single whitespace 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": "  1  ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "span",
        },
        TextNode {
          "chars": " ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": " 2 ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "span",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not collapse &nbsp; surrounding a text content into a single whitespace 2`] = `
"<div>
  <span>    &nbsp;1&nbsp;   </span>
  <span> 2   </span>
</div>
---
<div><span> &nbsp;1&nbsp; </span> <span> 2 </span></div>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not collapse multiple &nbsp; textNode into a single whitespace 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "1",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "span",
    },
    TextNode {
      "chars": "  ",
    },
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "2",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "span",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not collapse multiple &nbsp; textNode into a single whitespace 2`] = `
"<span>1</span>&nbsp;&nbsp;<span>2</span>
---
<span>1</span>&nbsp;&nbsp;<span>2</span>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not collapse whitespace inside of <pre> tags 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "  

   
",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "pre",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not collapse whitespace inside of <pre> tags 2`] = `
"<pre>  

   
</pre>
---
<pre>  

   
</pre>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not collapse whitespace inside of {{#no-minify}} tags in other tags 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "  

   
",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not collapse whitespace inside of {{#no-minify}} tags in other tags 2`] = `
"<div>{{#no-minify}}  

   
{{/no-minify}}</div>
---
<div>  

   
</div>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not minify \`classNames\` specified in .hbs-minifyrc.js 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [
        AttrNode {
          "name": "class",
          "value": TextNode {
            "chars": "description",
          },
        },
      ],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "
  1
  ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": "
    2
  ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "span",
        },
        TextNode {
          "chars": "
",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not minify \`classNames\` specified in .hbs-minifyrc.js 2`] = `
"<div class=\\"description\\">
  1
  <span>
    2
  </span>
</div>
---
<div class=\\"description\\">
  1
  <span>
    2
  </span>
</div>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not minify \`components\` specified in .hbs-minifyrc.js 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    BlockStatement {
      "hash": Hash {
        "pairs": Array [],
      },
      "inverse": null,
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "foo-bar",
        "parts": Array [
          "foo-bar",
        ],
        "this": false,
      },
      "program": Program {
        "blockParams": Array [],
        "body": Array [
          TextNode {
            "chars": "  ",
          },
          ElementNode {
            "attributes": Array [],
            "blockParams": Array [],
            "children": Array [
              TextNode {
                "chars": "
    yield content
  ",
              },
            ],
            "comments": Array [],
            "modifiers": Array [],
            "selfClosing": false,
            "tag": "span",
          },
          TextNode {
            "chars": "
",
          },
        ],
      },
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not minify \`components\` specified in .hbs-minifyrc.js 2`] = `
"{{#foo-bar}}
  <span>
    yield content
  </span>
{{/foo-bar}}
---
{{#foo-bar}}  <span>
    yield content
  </span>
{{/foo-bar}}"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not minify \`tagNames\` specified in .hbs-minifyrc.js 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "
  Box 564,
  ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": "
    Disneyland
  ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "b",
        },
        TextNode {
          "chars": "
  ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "br",
        },
        TextNode {
          "chars": "
  ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": " USA ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "u",
        },
        TextNode {
          "chars": "
",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "address",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not minify \`tagNames\` specified in .hbs-minifyrc.js 2`] = `
"<address>
  Box 564,
  <b>
    Disneyland
  </b>
  <br>
  <u> USA </u>
</address>
---
<address>
  Box 564,
  <b>
    Disneyland
  </b>
  <br>
  <u> USA </u>
</address>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not strip inside of <pre> tags 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "        ",
        },
        MustacheStatement {
          "escaped": true,
          "hash": Hash {
            "pairs": Array [],
          },
          "params": Array [],
          "path": PathExpression {
            "data": false,
            "original": "foo",
            "parts": Array [
              "foo",
            ],
            "this": false,
          },
        },
        TextNode {
          "chars": "        ",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "pre",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not strip inside of <pre> tags 2`] = `
"<pre>        {{foo}}        </pre>
---
<pre>        {{foo}}        </pre>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not strip inside of {{#no-minify}} tags 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    TextNode {
      "chars": "        ",
    },
    MustacheStatement {
      "escaped": true,
      "hash": Hash {
        "pairs": Array [],
      },
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "foo",
        "parts": Array [
          "foo",
        ],
        "this": false,
      },
    },
    TextNode {
      "chars": "        ",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not strip inside of {{#no-minify}} tags 2`] = `
"{{#no-minify}}        {{foo}}        {{/no-minify}}
---
        {{foo}}        "
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not strip inside of {{#no-minify}} tags in other tags 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "        ",
        },
        MustacheStatement {
          "escaped": true,
          "hash": Hash {
            "pairs": Array [],
          },
          "params": Array [],
          "path": PathExpression {
            "data": false,
            "original": "foo",
            "parts": Array [
              "foo",
            ],
            "this": false,
          },
        },
        TextNode {
          "chars": "        ",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not strip inside of {{#no-minify}} tags in other tags 2`] = `
"<div>{{#no-minify}}        {{foo}}        {{/no-minify}}</div>
---
<div>        {{foo}}        </div>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not strip leading/trailing text from ElementNode nodes 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "x ",
        },
        MustacheStatement {
          "escaped": true,
          "hash": Hash {
            "pairs": Array [],
          },
          "params": Array [],
          "path": PathExpression {
            "data": false,
            "original": "foo",
            "parts": Array [
              "foo",
            ],
            "this": false,
          },
        },
        TextNode {
          "chars": " y ",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not strip leading/trailing text from ElementNode nodes 2`] = `
"<div>x        {{foo}}     y   </div>
---
<div>x {{foo}} y </div>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not strip leading/trailing text from Program nodes 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    TextNode {
      "chars": "x ",
    },
    MustacheStatement {
      "escaped": true,
      "hash": Hash {
        "pairs": Array [],
      },
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "foo",
        "parts": Array [
          "foo",
        ],
        "this": false,
      },
    },
    TextNode {
      "chars": " y ",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) does not strip leading/trailing text from Program nodes 2`] = `
"x        {{foo}}     y   
---
x {{foo}} y "
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) minifies \`classNames\` that are not specified in .hbs-minifyrc.js 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [
        AttrNode {
          "name": "class",
          "value": TextNode {
            "chars": "contact-details",
          },
        },
      ],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": " John Smith ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": " (Entrepreneur) ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "i",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) minifies \`classNames\` that are not specified in .hbs-minifyrc.js 2`] = `
"<div class=\\"contact-details\\">
  John Smith
  <i>
    (Entrepreneur)
  </i>
</div>
---
<div class=\\"contact-details\\"> John Smith <i> (Entrepreneur) </i></div>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) minifies \`components\` that are not specified in .hbs-minifyrc.js 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    BlockStatement {
      "hash": Hash {
        "pairs": Array [],
      },
      "inverse": null,
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "my-component",
        "parts": Array [
          "my-component",
        ],
        "this": false,
      },
      "program": Program {
        "blockParams": Array [],
        "body": Array [
          ElementNode {
            "attributes": Array [],
            "blockParams": Array [],
            "children": Array [
              TextNode {
                "chars": " yield content ",
              },
            ],
            "comments": Array [],
            "modifiers": Array [],
            "selfClosing": false,
            "tag": "span",
          },
        ],
      },
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) minifies \`components\` that are not specified in .hbs-minifyrc.js 2`] = `
"{{#my-component}}
  <span>
    yield content
  </span>
{{/my-component}}
---
{{#my-component}}<span> yield content </span>{{/my-component}}"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) minifies \`tagNames\` that are not specified in .hbs-minifyrc.js 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": " Box 564, ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": " Disneyland ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "b",
        },
        TextNode {
          "chars": " ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "br",
        },
        TextNode {
          "chars": " ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": " USA ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "u",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "section",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) minifies \`tagNames\` that are not specified in .hbs-minifyrc.js 2`] = `
"<section>
  Box 564,
  <b>
    Disneyland
  </b>
  <br>
  <u> USA </u>
</section>
---
<section> Box 564, <b> Disneyland </b> <br> <u> USA </u></section>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) strips leading and trailing whitespace from ElementNode nodes 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        MustacheStatement {
          "escaped": true,
          "hash": Hash {
            "pairs": Array [],
          },
          "params": Array [],
          "path": PathExpression {
            "data": false,
            "original": "foo",
            "parts": Array [
              "foo",
            ],
            "this": false,
          },
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) strips leading and trailing whitespace from ElementNode nodes 2`] = `
"<div>        {{foo}}        </div>
---
<div>{{foo}}</div>"
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) strips leading and trailing whitespace from Program nodes 1`] = `
Program {
  "blockParams": Array [],
  "body": Array [
    MustacheStatement {
      "escaped": true,
      "hash": Hash {
        "pairs": Array [],
      },
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "foo",
        "parts": Array [
          "foo",
        ],
        "this": false,
      },
    },
  ],
}
`;

exports[`HBS Minifier plugin (with @glimmer/syntax v0.37.1) strips leading and trailing whitespace from Program nodes 2`] = `
"        {{foo}}        
---
{{foo}}"
`;

exports[`HBS Minifier plugin collapses whitespace into single space character 1`] = `
Template {
  "blockParams": Array [],
  "body": Array [
    MustacheStatement {
      "escaped": true,
      "hash": Hash {
        "pairs": Array [],
      },
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "foo",
        "parts": Array [
          "foo",
        ],
        "this": false,
      },
    },
    TextNode {
      "chars": " ",
    },
    MustacheStatement {
      "escaped": true,
      "hash": Hash {
        "pairs": Array [],
      },
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "bar",
        "parts": Array [
          "bar",
        ],
        "this": false,
      },
    },
  ],
}
`;

exports[`HBS Minifier plugin collapses whitespace into single space character 2`] = `
"{{foo}}  

   
{{bar}}
---
{{foo}} {{bar}}"
`;

exports[`HBS Minifier plugin does not collapse &nbsp; surrounding a text content into a single whitespace 1`] = `
Template {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": "  1  ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "span",
        },
        TextNode {
          "chars": " ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": " 2 ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "span",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin does not collapse &nbsp; surrounding a text content into a single whitespace 2`] = `
"<div>
  <span>    &nbsp;1&nbsp;   </span>
  <span> 2   </span>
</div>
---
<div><span> &nbsp;1&nbsp; </span> <span> 2 </span></div>"
`;

exports[`HBS Minifier plugin does not collapse multiple &nbsp; textNode into a single whitespace 1`] = `
Template {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "1",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "span",
    },
    TextNode {
      "chars": "  ",
    },
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "2",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "span",
    },
  ],
}
`;

exports[`HBS Minifier plugin does not collapse multiple &nbsp; textNode into a single whitespace 2`] = `
"<span>1</span>&nbsp;&nbsp;<span>2</span>
---
<span>1</span>&nbsp;&nbsp;<span>2</span>"
`;

exports[`HBS Minifier plugin does not collapse whitespace inside of <pre> tags 1`] = `
Template {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "  

   
",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "pre",
    },
  ],
}
`;

exports[`HBS Minifier plugin does not collapse whitespace inside of <pre> tags 2`] = `
"<pre>  

   
</pre>
---
<pre>  

   
</pre>"
`;

exports[`HBS Minifier plugin does not collapse whitespace inside of {{#no-minify}} tags in other tags 1`] = `
Template {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "  

   
",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin does not collapse whitespace inside of {{#no-minify}} tags in other tags 2`] = `
"<div>{{#no-minify}}  

   
{{/no-minify}}</div>
---
<div>  

   
</div>"
`;

exports[`HBS Minifier plugin does not minify \`classNames\` specified in .hbs-minifyrc.js 1`] = `
Template {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [
        AttrNode {
          "name": "class",
          "value": TextNode {
            "chars": "description",
          },
        },
      ],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "
  1
  ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": "
    2
  ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "span",
        },
        TextNode {
          "chars": "
",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin does not minify \`classNames\` specified in .hbs-minifyrc.js 2`] = `
"<div class=\\"description\\">
  1
  <span>
    2
  </span>
</div>
---
<div class=\\"description\\">
  1
  <span>
    2
  </span>
</div>"
`;

exports[`HBS Minifier plugin does not minify \`components\` specified in .hbs-minifyrc.js 1`] = `
Template {
  "blockParams": Array [],
  "body": Array [
    BlockStatement {
      "hash": Hash {
        "pairs": Array [],
      },
      "inverse": null,
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "foo-bar",
        "parts": Array [
          "foo-bar",
        ],
        "this": false,
      },
      "program": Block {
        "blockParams": Array [],
        "body": Array [
          TextNode {
            "chars": "  ",
          },
          ElementNode {
            "attributes": Array [],
            "blockParams": Array [],
            "children": Array [
              TextNode {
                "chars": "
    yield content
  ",
              },
            ],
            "comments": Array [],
            "modifiers": Array [],
            "selfClosing": false,
            "tag": "span",
          },
          TextNode {
            "chars": "
",
          },
        ],
      },
    },
  ],
}
`;

exports[`HBS Minifier plugin does not minify \`components\` specified in .hbs-minifyrc.js 2`] = `
"{{#foo-bar}}
  <span>
    yield content
  </span>
{{/foo-bar}}
---
{{#foo-bar}}  <span>
    yield content
  </span>
{{/foo-bar}}"
`;

exports[`HBS Minifier plugin does not minify \`tagNames\` specified in .hbs-minifyrc.js 1`] = `
Template {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "
  Box 564,
  ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": "
    Disneyland
  ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "b",
        },
        TextNode {
          "chars": "
  ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "br",
        },
        TextNode {
          "chars": "
  ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": " USA ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "u",
        },
        TextNode {
          "chars": "
",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "address",
    },
  ],
}
`;

exports[`HBS Minifier plugin does not minify \`tagNames\` specified in .hbs-minifyrc.js 2`] = `
"<address>
  Box 564,
  <b>
    Disneyland
  </b>
  <br>
  <u> USA </u>
</address>
---
<address>
  Box 564,
  <b>
    Disneyland
  </b>
  <br>
  <u> USA </u>
</address>"
`;

exports[`HBS Minifier plugin does not strip inside of <pre> tags 1`] = `
Template {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "        ",
        },
        MustacheStatement {
          "escaped": true,
          "hash": Hash {
            "pairs": Array [],
          },
          "params": Array [],
          "path": PathExpression {
            "data": false,
            "original": "foo",
            "parts": Array [
              "foo",
            ],
            "this": false,
          },
        },
        TextNode {
          "chars": "        ",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "pre",
    },
  ],
}
`;

exports[`HBS Minifier plugin does not strip inside of <pre> tags 2`] = `
"<pre>        {{foo}}        </pre>
---
<pre>        {{foo}}        </pre>"
`;

exports[`HBS Minifier plugin does not strip inside of {{#no-minify}} tags 1`] = `
Template {
  "blockParams": Array [],
  "body": Array [
    TextNode {
      "chars": "        ",
    },
    MustacheStatement {
      "escaped": true,
      "hash": Hash {
        "pairs": Array [],
      },
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "foo",
        "parts": Array [
          "foo",
        ],
        "this": false,
      },
    },
    TextNode {
      "chars": "        ",
    },
  ],
}
`;

exports[`HBS Minifier plugin does not strip inside of {{#no-minify}} tags 2`] = `
"{{#no-minify}}        {{foo}}        {{/no-minify}}
---
        {{foo}}        "
`;

exports[`HBS Minifier plugin does not strip inside of {{#no-minify}} tags in other tags 1`] = `
Template {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "        ",
        },
        MustacheStatement {
          "escaped": true,
          "hash": Hash {
            "pairs": Array [],
          },
          "params": Array [],
          "path": PathExpression {
            "data": false,
            "original": "foo",
            "parts": Array [
              "foo",
            ],
            "this": false,
          },
        },
        TextNode {
          "chars": "        ",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin does not strip inside of {{#no-minify}} tags in other tags 2`] = `
"<div>{{#no-minify}}        {{foo}}        {{/no-minify}}</div>
---
<div>        {{foo}}        </div>"
`;

exports[`HBS Minifier plugin does not strip leading/trailing text from ElementNode nodes 1`] = `
Template {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": "x ",
        },
        MustacheStatement {
          "escaped": true,
          "hash": Hash {
            "pairs": Array [],
          },
          "params": Array [],
          "path": PathExpression {
            "data": false,
            "original": "foo",
            "parts": Array [
              "foo",
            ],
            "this": false,
          },
        },
        TextNode {
          "chars": " y ",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin does not strip leading/trailing text from ElementNode nodes 2`] = `
"<div>x        {{foo}}     y   </div>
---
<div>x {{foo}} y </div>"
`;

exports[`HBS Minifier plugin does not strip leading/trailing text from Program nodes 1`] = `
Template {
  "blockParams": Array [],
  "body": Array [
    TextNode {
      "chars": "x ",
    },
    MustacheStatement {
      "escaped": true,
      "hash": Hash {
        "pairs": Array [],
      },
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "foo",
        "parts": Array [
          "foo",
        ],
        "this": false,
      },
    },
    TextNode {
      "chars": " y ",
    },
  ],
}
`;

exports[`HBS Minifier plugin does not strip leading/trailing text from Program nodes 2`] = `
"x        {{foo}}     y   
---
x {{foo}} y "
`;

exports[`HBS Minifier plugin minifies \`classNames\` that are not specified in .hbs-minifyrc.js 1`] = `
Template {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [
        AttrNode {
          "name": "class",
          "value": TextNode {
            "chars": "contact-details",
          },
        },
      ],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": " John Smith ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": " (Entrepreneur) ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "i",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin minifies \`classNames\` that are not specified in .hbs-minifyrc.js 2`] = `
"<div class=\\"contact-details\\">
  John Smith
  <i>
    (Entrepreneur)
  </i>
</div>
---
<div class=\\"contact-details\\"> John Smith <i> (Entrepreneur) </i></div>"
`;

exports[`HBS Minifier plugin minifies \`components\` that are not specified in .hbs-minifyrc.js 1`] = `
Template {
  "blockParams": Array [],
  "body": Array [
    BlockStatement {
      "hash": Hash {
        "pairs": Array [],
      },
      "inverse": null,
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "my-component",
        "parts": Array [
          "my-component",
        ],
        "this": false,
      },
      "program": Block {
        "blockParams": Array [],
        "body": Array [
          ElementNode {
            "attributes": Array [],
            "blockParams": Array [],
            "children": Array [
              TextNode {
                "chars": " yield content ",
              },
            ],
            "comments": Array [],
            "modifiers": Array [],
            "selfClosing": false,
            "tag": "span",
          },
        ],
      },
    },
  ],
}
`;

exports[`HBS Minifier plugin minifies \`components\` that are not specified in .hbs-minifyrc.js 2`] = `
"{{#my-component}}
  <span>
    yield content
  </span>
{{/my-component}}
---
{{#my-component}}<span> yield content </span>{{/my-component}}"
`;

exports[`HBS Minifier plugin minifies \`tagNames\` that are not specified in .hbs-minifyrc.js 1`] = `
Template {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        TextNode {
          "chars": " Box 564, ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": " Disneyland ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "b",
        },
        TextNode {
          "chars": " ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "br",
        },
        TextNode {
          "chars": " ",
        },
        ElementNode {
          "attributes": Array [],
          "blockParams": Array [],
          "children": Array [
            TextNode {
              "chars": " USA ",
            },
          ],
          "comments": Array [],
          "modifiers": Array [],
          "selfClosing": false,
          "tag": "u",
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "section",
    },
  ],
}
`;

exports[`HBS Minifier plugin minifies \`tagNames\` that are not specified in .hbs-minifyrc.js 2`] = `
"<section>
  Box 564,
  <b>
    Disneyland
  </b>
  <br>
  <u> USA </u>
</section>
---
<section> Box 564, <b> Disneyland </b> <br> <u> USA </u></section>"
`;

exports[`HBS Minifier plugin strips leading and trailing whitespace from ElementNode nodes 1`] = `
Template {
  "blockParams": Array [],
  "body": Array [
    ElementNode {
      "attributes": Array [],
      "blockParams": Array [],
      "children": Array [
        MustacheStatement {
          "escaped": true,
          "hash": Hash {
            "pairs": Array [],
          },
          "params": Array [],
          "path": PathExpression {
            "data": false,
            "original": "foo",
            "parts": Array [
              "foo",
            ],
            "this": false,
          },
        },
      ],
      "comments": Array [],
      "modifiers": Array [],
      "selfClosing": false,
      "tag": "div",
    },
  ],
}
`;

exports[`HBS Minifier plugin strips leading and trailing whitespace from ElementNode nodes 2`] = `
"<div>        {{foo}}        </div>
---
<div>{{foo}}</div>"
`;

exports[`HBS Minifier plugin strips leading and trailing whitespace from Program nodes 1`] = `
Template {
  "blockParams": Array [],
  "body": Array [
    MustacheStatement {
      "escaped": true,
      "hash": Hash {
        "pairs": Array [],
      },
      "params": Array [],
      "path": PathExpression {
        "data": false,
        "original": "foo",
        "parts": Array [
          "foo",
        ],
        "this": false,
      },
    },
  ],
}
`;

exports[`HBS Minifier plugin strips leading and trailing whitespace from Program nodes 2`] = `
"        {{foo}}        
---
{{foo}}"
`;
